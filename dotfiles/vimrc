" Note: Skip initialization for vim-tiny or vim-small.
if !1 | finish | endif

if has('vim_starting')
  if &compatible
   set nocompatible               " Be iMproved
  endif

  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" My Bundles here:
" Refer to |:NeoBundle-examples|.
NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'bling/vim-airline'
NeoBundle 'godlygeek/tabular'
NeoBundle 'guns/vim-clojure-highlight'
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'kien/rainbow_parentheses.vim'
NeoBundle 'majutsushi/tagbar'
NeoBundle 'mhinz/vim-signify'
NeoBundle 'matze/vim-move'
NeoBundle 'othree/html5.vim'
NeoBundle 'paredit.vim'
NeoBundle 'rodjek/vim-puppet'
NeoBundle 'scrooloose/syntastic'
NeoBundle 'Shougo/vimproc.vim', { 'build' : { 'linux' : 'make' }}
NeoBundle 'tpope/vim-abolish'
NeoBundle 'tpope/vim-bundler'
NeoBundle 'tpope/vim-commentary'
NeoBundle 'tpope/vim-dispatch'
NeoBundle 'tpope/vim-endwise'
NeoBundle 'tpope/vim-eunuch'
NeoBundle 'tpope/vim-fireplace'
NeoBundle 'tpope/vim-fugitive', { 'augroup' : 'fugitive'}
NeoBundle 'tpope/vim-leiningen'
NeoBundle 'tpope/vim-projectionist'
NeoBundle 'tpope/vim-rbenv'
NeoBundle 'tpope/vim-repeat'
NeoBundle 'tpope/vim-rails'
NeoBundle 'tpope/vim-rake'
NeoBundle 'tpope/vim-sensible'
NeoBundle 'tpope/vim-surround'
NeoBundle 'tpope/vim-tbone'
NeoBundle 'tpope/vim-unimpaired'
NeoBundle 'tpope/vim-vinegar'

call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

" activate mouse in all modes
set mouse=a

" show some invisible characters
set list

" enable line numbers
set number

" make tabs narrower
set tabstop=4
set shiftwidth=4

" disable spacebar right-motion in normal mode
nnoremap <Space> <Nop>
" use it for a leader key instead
let mapleader=" "

" map semicolon to colon
" That way you dont need to hold Shift to enter cmdline mode
map ; :

" map `Y` to yank to the end of the line
" You can still yank the entire line with `yy`
nmap Y y$

" recognize .md files as markdown
au BufRead,BufNewFile *.md set filetype=markdown

" enable rubocop
let g:syntastic_ruby_checkers = ['mri', 'rubocop']

" if our terminal supports escape sequences
if &term == "screen-256color"
  " set the insert mode cursor to a blinking vertical bar
  let &t_SI = "\<Esc>[5 q"
  " in other modes, set the cursor to a blinking block
  let &t_EI = "\<Esc>[1 q"

  " 1 -> blinking block
  " 2 -> solid block
  " 3 -> blinking underscore
  " 4 -> solid underscore
  " 5 -> blinking vertical bar
  " 6 -> solid vertical bar
endif

" Colors
set background=dark
let g:solarized_termcolors=256
let g:solarized_termtrans=1
colorscheme solarized

" Rebalance splits when the window resizes
au VimResized * :wincmd =

" Enable cursorline on the window with focus
augroup cline
  au!
  au WinLeave,InsertEnter * set nocursorline
  au WinEnter,InsertLeave * set cursorline
augroup END

" fugitive shortcuts
nnoremap <leader>gs :Gstatus<cr>
nnoremap <leader>gb :Gblame<cr>
nnoremap <leader>gl :Glog<cr>
nnoremap <leader>gc :Gcommit<cr>
nnoremap <leader>gg :Ggrep
nnoremap <leader>gmv :Gmove
nnoremap <leader>grm :Gremove
